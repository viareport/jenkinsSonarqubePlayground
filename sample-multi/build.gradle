buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7.1"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id 'jacoco'
}

allprojects {
    group 'fr.inativ.sample.multi'
    version '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    jacoco {
        toolVersion = "0.8.4"
    }
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'jacoco'
    apply plugin: "org.sonarqube"

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        testCompile 'junit:junit:4.12'
        testCompile "org.jetbrains.kotlin:kotlin-test-junit:1.3.41"
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    sonarqube {
        properties {
            property "sonar.java.coveragePlugin", "jacoco"
            //link to xml file that generated by jacoco for coverage
            property "sonar.coverage.jacoco.xmlReportPaths", "../build/reports/jacoco/report.xml"

            // Remove warning 'SCM provider autodetection failed. Please use "sonar.scm.provider" to define SCM of your project.'
            property "sonar.scm.disabled", "True"
        }
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}